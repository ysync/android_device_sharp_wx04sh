# Copyright (c) 2009-2012, Code Aurora Forum. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of Code Aurora nor
#       the names of its contributors may be used to endorse or promote
#       products derived from this software without specific prior written
#       permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NON-INFRINGEMENT ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

on init
    export LD_LIBRARY_PATH /system/lib

    mkdir /external_sd

    mkdir /synthesis
    mount tmpfs tmpfs /synthesis nosuid nodev
    chown root root /synthesis
    chmod 0711 /synthesis
    mkdir /synthesis/sphinx 0700 root root
    mkdir /synthesis/hades 0775 root root

    mkdir /config 0500 root root
    mkdir /durable 0700 root root
    mkdir /calllog 0771 root root
    mkdir /factory 0700 root root
    mkdir /persist 0771 system system

    mkdir /firmware 0771 system system
    mkdir /tombstones 0771 system system
    mkdir /fota

    mkdir /internal_sd

# msm specific files that need to be created on /data
on post-fs-data
    chmod 0664 /sys/devices/platform/msm_sdcc.1/polling
    chmod 0664 /sys/devices/platform/msm_sdcc.2/polling
    chmod 0664 /sys/devices/platform/msm_sdcc.3/polling
    chmod 0664 /sys/devices/platform/msm_sdcc.4/polling

    # Chown polling nodes as needed from UI running on system server
    chown system system /sys/devices/platform/msm_sdcc.1/polling
    chown system system /sys/devices/platform/msm_sdcc.2/polling
    chown system system /sys/devices/platform/msm_sdcc.3/polling
    chown system system /sys/devices/platform/msm_sdcc.4/polling

on boot
#    chown system system /sys/devices/platform/msm_otg/usb_host_enable

#host-api mkdir
    mkdir /dev/bus 0755
    mkdir /dev/bus/usb 0755

#string descriptor
    write /sys/class/android_usb/android0/iManufacturer "SHARP Corporation"
    write /sys/class/android_usb/android0/iProduct "WX04SH"
    write /sys/class/android_usb/android0/iSerial ${ro.serialno}
    write /sys/class/android_usb/android0/f_mass_storage/msc_iInterface "WX04SH SD Storage"

#class-specific paramater
    write /sys/class/android_usb/android0/f_mass_storage/msc_inquiry_string "SHARP   WX04SH microSD   "

# SHARP_EXTEND exFAT kernel module support 2012/11/12 Add-Start
#    insmod /sbin/shexfat.ko
# SHARP_EXTEND exFAT kernel module support 2012/11/12 Add-End

    setprop persist.sys.usb.config mass_storage,adb

service shdisp_process /system/bin/shdisp_process
    socket shdisp_process stream 0660 root mount

service usbmgrinitd /system/bin/usbmgrinitd
    oneshot

service shusb_process /system/bin/shusb_process

# SHARP_EXTEND filesystem add start
service sdcard /system/bin/sdcard /internal_sd/sdcard 1023 1023
    user root
    disabled
    oneshot
# SHARP_EXTEND filesystem add end

# SHARP_EXTEND filesystem add start
# service exfat_fuse /system/bin/exfat_fuse -f
#    user root
#    disabled
#    oneshot
# SHARP_EXTEND filesystem add end

# Used to disable USB when switching states
on property:sys.usb.config=none
    stop adbd
    write /sys/class/android_usb/android0/enable 0
    write /sys/class/android_usb/android0/bDeviceClass 0
    setprop sys.usb.state ${sys.usb.config}

# adb only USB configuration
# This should only be used during device bringup
# and as a fallback if the USB manager fails to set a standard configuration
on property:sys.usb.config=adb
    write /sys/class/android_usb/android0/enable 0
    write /sys/class/android_usb/android0/idVendor 18d1
    write /sys/class/android_usb/android0/idProduct D002
    write /sys/class/android_usb/android0/functions ${sys.usb.config}
    write /sys/class/android_usb/android0/enable 1
    start adbd
    setprop sys.usb.state ${sys.usb.config}

 on property:sys.usb.config=mass_storage,adb
    write /sys/class/android_usb/android0/enable 0
    write /sys/class/android_usb/android0/idVendor 04DD
    write /sys/class/android_usb/android0/idProduct 9710
    write /sys/class/android_usb/android0/bDeviceClass 0
    write /sys/class/android_usb/android0/functions ${sys.usb.config}
    write /sys/class/android_usb/android0/enable 1
    start adbd
    setprop sys.usb.state ${sys.usb.config}

# Used to set USB configuration at boot and to switch the configuration
# when changing the default configuration
on property:persist.sys.usb.config=*
    setprop sys.usb.config ${persist.sys.usb.config}